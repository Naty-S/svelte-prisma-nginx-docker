## see https://docs.docker.com/compose/
version: '3.9'

services:
  sveltekit-app-dev:
    container_name: sveltekit-app-dev
    image: sveltekit-app-dev
    build:
      context: ./
      dockerfile: ./Dockerfile.dev
    env_file:
      - .env
    links:
      - postgres-dev
      - nginx-dev
    depends_on:
      - postgres-dev
      - nginx-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - 3000:3000
    volumes:
      # Ensure hot-module reload works, don't have to restart our container to see changes.
      - ./:/usr/var/${SERVER_NAME}
      # To avoid copying over local Node modules to Docker
      - docker_node_modules-dev:/usr/var/${SERVER_NAME}/node_modules


  ## Execute and run the Postgres database container on port 5432. 
  # Access the database, set the environment
  postgres-dev:
    container_name: postgres-dev
    image: postgres-dev:14
    hostname: postgres
    build:
      context: ./db
    env_file:
      - .env
    ports:
      - ${PG_PORT}:5432
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      PGDATA: ${PG_DATA}
      # DB_DUMP: ${DB_DUMP}
    volumes:
      - pgdata-dev:${PG_DATA}


  ##
  nginx-dev:
    container_name: nginx-dev
    image: nginx
    env_file:
      - .env
    command: [ "nginx", "-g", "daemon off;" ]
    ports:
      - ${NGINX_HTTP_PORT}:80
    environment: # las usa el .conf
      - SERVER_NAME=${SERVER_NAME}
      - NGINX_ROOT=${NGINX_ROOT}
      - NGINX_PROXY_PASS=${NGINX_PROXY_PASS}
    volumes:
      - ./nginx/prod/default.conf.template:/etc/nginx/templates/default.conf.template


volumes:
  pgdata-dev:
  docker_node_modules-dev:
